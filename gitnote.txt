git note
2019/11/11

git add/stage <file>		# 添加文件到stage暂存区
git commit <file>		# 提交stage暂存区文件到branch master仓库或者叫版本库
git commit -m "discribe the changes"	# 提交文件，并描述变更。

git status			# 查看仓库当前状态
git log				# 查看提交日志
git log --pretty=oneline	# 一行一条的方式显示提交的日志
git reflog			# 查看历史操作记录，主要是查看commit id

git reset --hard <commit id>	# 恢复到指定commit id的版本，id写前7位即可
git reset --hard HEAD		# unstage, 回退到上一个版本
git reset HEAD^			# 恢复到上一个版本
git reset HEAD^^		# 恢复到上上一个版本

git diff <file>			# 工作区文件与暂存区文件对比
git diff HEAD <file>		# 工作区文件与仓库文件对比
git diff --cached <file>	# 暂存区文件与仓库文件对比

git restore --staged <file>	# unstage, 撤销上一次add/stage操作,版本回退
git restore <file>		# 放弃工作区的修改，或者说将工作区的文件恢复为暂存区的版本

git remote add origin git@github.com:wuchanghui5220/learngit.git # 在自己的GitHub创建远程仓库learngit，与本地仓库关联。
git push -u origin master	# 把本地库的内容推送到远程库，并关联。
git push origin master		# 此后，要推送本地库，就使用此命令。

# 克隆
git clone git@github.com:wuchanghui5220/gitskills.git


git branch dev			# 创建分支dev

git checkout -b dev		# -b 参数表示创建并切换
git checkout dev		# 切换到dev分支

git switch -c dev		# -c 参数表示创建并切换
git switch dev			# 切换到dev分支


git branch			# 查看当前分支

git checkout master		# 切换到主分支
git merge dev			# 把dev分支合并到主分支
git branch -d dev		# 删除dev分支


git log --graph --pretty=oneline --abbrev-commit # 查看分支的合并情况

